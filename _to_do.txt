To do
=======================================================

 - Split validation and insert function with only "clean" records. Implement batch insert.
   This way db_results will always be OK, but create new validation_results to print.
 - Refine _find_player_dupl.py, and start cleaning data by mapping duplicates
 - Simplify cache functions by creating a generic build_cache(cursor, table_name, key_fields, value_fields="*" function)
    

Improvements long term
=======================================================
- Fix the pathing/packages whatever so everything doesnt have to be in /src
- Figure out how to deal with transitions
  Im thinking to create a separate player_license table which can be searched if not "real" license is found
  This would keep the integrity of the player_license so it only holds real scraped data


‚ÑπÔ∏è  Participant update complete in 2823.56s
‚ÑπÔ∏è  Total participants parsed: 451706/439951
üìä Database Summary:
   ‚úÖ Success: 310869
      ‚Ä¢ Participant added successfully (new raw player): 100554
      ‚Ä¢ Participant added successfully (existing raw player): 133454
      ‚Ä¢ Participant added successfully (matching canonical player): 76861
   ‚ùå Failed: 140019
      ‚Ä¢ Club not found (tried exact + prefix): 139822
      ‚Ä¢ Ambiguous player candidates with expired licenses: 48
      ‚Ä¢ Ambiguous player candidates with valid licenses: 146
      ‚Ä¢ PDF parsing failed: No /Root object! - Is this really a PDF?: 3
   ‚è≠Ô∏è  Skipped: 821
      ‚Ä¢ Participant already exists (matching canonical player): 800
      ‚Ä¢ Participant already exists (raw player): 21
   ‚ö†Ô∏è  Warning: 10574
      ‚Ä¢ Club name matched by prefix: 1472
      ‚Ä¢ Player did not have a valid license in the club on the day of the tournament: 7777
      ‚Ä¢ Matched via prior season license (expired before class_date): 1325